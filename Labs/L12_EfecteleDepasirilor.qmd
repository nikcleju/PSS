---
title: Efectele depășirilor în filtrarea digitală
subtitle: Laborator 12, PSS
format:
  html: default
  pdf: default
  ipynb: default

toc: true
number-depth: 2
number-sections: true

jupyter: python3
execute:
  freeze: true
  eval: false

crossref:
  eq-prefix: ""   # (default is "Equation")
  fig-prefix: "Fig."   # (default is "Equation")
---

\newcommand*{\underuparrow}[1]{\ensuremath{\underset{\uparrow}{#1}}}

## Obiectiv

Studiul efectelor produse de depășirile de format în cadrul implementărilor
în virgulă fixă ale unui filtru digital.

## Noțiuni teoretice

## Exerciții teoretice

1. Se consideră sistemul
	$$H(z) = \frac{1-\frac{1}{2}z^{-1}}{\left(1 - \frac{1}{4}z^{-1}\right)\left(1 + \frac{1}{4}z^{-1}\right)}$$

    a. Să se deseneze realizarea în una din formele serie
	b. Considerăm o implementare în formatul virgulă fixă, cu $b$ biți pentru partea fracționară.
	Fiecare produs se cuantizează prin rotunjire la acest format.
	Determinați dispersia zgomotului de rotunjire datorat multiplicărilor
	la ieșirea implementării de la punctul a.

## Exerciții practice

1. Utilizați utilitarul `fdatool` pentru a proiecta un filtru trece-jos IIR
   de ordin 4, de tip Butterworth, cu frecvența de tăiere de 1.5kHz la
   o frecvență de eșantionare de 44.1kHz.

   a. Exportați filtrul în Simulink în forma cu secțiuni de ordinul 2 ("Export to Simulink model", bifați *Build model using basic elements*).
   b. Convertiți filtrul la forma directă II și exportați-l din nou în Simulink (bifați *Build model using basic elements*).

2. În modelul Simulink, realizați două copii ale filtrului (Copy/Paste) în forma directă 2.
   
   La ambele filtre se va pune ca intrare un semnal audio (de ex. *Kalimba.mp3*).
   La blocul "From Multimedia File", setați parametrul "Number of samples per audio channel" (1024) la **1**.
   
   Afișați tipul de date al semnalelor din schemă: 
   clic-dreapta în zona albă-> "Other Displays" -> "Signal and Ports" -> "Port Data Types"
   
   a. La al doilea filtru, convertiți semnalul de intrare la formatul virgulă fixă 1S6Î9F, folosind un bloc de tip "Data Type Conversion";
   a. Obțineți și afișați diferența dintre cele două ieșiri;
   c. Creșteți numărul de biți de la partea întreagă, pentru a obține un semnal de ieșire asemănător celui original;
   b. Exportați semnalul diferență dintre cele doup ieșiri în Workspace-ul Matlab și calculați media și varianța sa.
   
      Folosiți un bloc "To Workspace", cu setările: 
	  - Save format: Array
	  - 2D în loc de 3D

3. Repetați exercițiul 2 pentru filtrul implementate cu secțiuni de ordinul 2.

3. Reluați exercițiul 2, revenind la formatul virgulă fixă 1S6Î9F.
   
   La cel de-al doilea filtru, debifați la blocurile *Sum* si *Gain* opțiunea *Saturate on integer overflow*.

   a. Care este efectul acesteia? Calculați și afișați diferența față de ieșirea primului filtru.
   b. În care caz se obțin erori mai mici? (cu opțiunea bifată sau nu).

4. Utilizați funcția `normescal` pentru a calcula diferite norme de scalare pentru filtrul dat.
Scalați semnalul de intrare cu una dintre acestea, și rescalați ieșirea. Care este efectul?

## Întrebări finale

1. TBD
